pipeline {
    agent any

    environment {
        SERVICE_NAME = "config-server"
        IMAGE_NAME = "config-server-miyembro"
        IMAGE_TAG = "${IMAGE_NAME}:${BUILD_NUMBER}"
        ORGANIZATION_NAME = "miyembro"
        DOCKERHUB_USERNAME = "arjayfuentes24"
    }

    stages {
        stage('Build') {
            steps {
                sh 'chmod +x gradlew'
                sh './gradlew clean build'
            }
        }

        stage('Build and Push Image') {
            steps {
                script {
                    def REPOSITORY_TAG = "${DOCKERHUB_USERNAME}/${IMAGE_TAG}"

                    withCredentials([usernamePassword(
                        credentialsId: 'miyembro-docker-token',
                        passwordVariable: 'DOCKER_PASSWORD',
                        usernameVariable: 'DOCKER_USERNAME'
                    )]) {
                        sh '''
                            echo "$DOCKER_PASSWORD" | \
                            docker login -u "$DOCKER_USERNAME" --password-stdin
                        '''
                        sh "docker build -t ${IMAGE_NAME} ."
                        sh "docker tag ${IMAGE_NAME} ${REPOSITORY_TAG}"
                        sh "docker tag ${IMAGE_NAME} ${DOCKERHUB_USERNAME}/${IMAGE_NAME}:latest"
                        sh "docker push ${REPOSITORY_TAG}"
                        sh "docker push ${DOCKERHUB_USERNAME}/${IMAGE_NAME}:latest"
                    }
                }
            }
        }

        stage('Deploy to Swarm') {
            steps {
                sh "docker stack deploy -c ${WORKSPACE}/docker-compose.yml ${SERVICE_NAME}"
            }
        }
    }

    post {
        always {
            cleanWs()
        }
    }
}