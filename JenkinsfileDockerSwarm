pipeline {
    agent any

    environment {
        SERVICE_NAME = "config-server"
        IMAGE_NAME = "config-server-miyembro"
        IMAGE_TAG = "${IMAGE_NAME}:${BUILD_NUMBER}"
        REPOSITORY_TAG = "${DOCKERHUB_USERNAME}/${IMAGE_TAG}"
        BUILDAH_FORMAT = 'docker'
    }

    stages {
        stage('Build and Push Image') {
            steps {
                script {
                    withCredentials([usernamePassword(
                        credentialsId: 'miyembro-docker-token',
                        usernameVariable: 'DOCKER_USER',
                        passwordVariable: 'DOCKER_TOKEN'
                    )]) {
                        sh '''
                            # Configure Buildah storage
                            mkdir -p $HOME/.config/containers
                            echo -e '[storage]\ndriver = "vfs"' > $HOME/.config/containers/storage.conf

                            # Build and push
                            buildah login -u "$DOCKER_USER" --password-stdin docker.io <<< "$DOCKER_TOKEN"
                            buildah bud --storage-driver vfs -t ${IMAGE_NAME} .
                            buildah tag ${IMAGE_NAME} ${REPOSITORY_TAG}
                            buildah tag ${IMAGE_NAME} ${DOCKERHUB_USERNAME}/${IMAGE_NAME}:latest
                            buildah push --storage-driver vfs ${REPOSITORY_TAG}
                            buildah push --storage-driver vfs ${DOCKERHUB_USERNAME}/${IMAGE_NAME}:latest
                        '''
                    }
                }
            }
        }

        stage('Deploy to Swarm') {
            steps {
                script {
                    sh '''
                        docker stack deploy \
                          -c ${WORKSPACE}/docker-compose.yml \
                          ${SERVICE_NAME} \
                          --with-registry-auth
                    '''
                }
            }
        }
    }

    post {
        always {
            deleteDir()
            sh 'docker system prune -f || true'
        }
    }
}